apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: jaeger-configuration
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
  data:
    span-storage-type: elasticsearch
    collector: |
      es:
        server-urls: http://elasticsearch:9200
        username: elastic
        password: changeme
      collector:
        zipkin:
          http-port: 9411
    query: |
      es:
        server-urls: http://elasticsearch:9200
        username: elastic
        password: changeme
    agent: |
      collector:
        host-port: "jaeger-collector:14250"

- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: elasticsearch
    labels:
      app: elasticsearch
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: storage-backend
      app.kubernetes.io/part-of: jaeger
  spec:
    serviceName: elasticsearch
    replicas: 1
    selector:
      matchLabels:
        app: elasticsearch
    template:
      metadata:
        labels:
          app: elasticsearch
          app.kubernetes.io/name: elasticsearch
          app.kubernetes.io/component: storage-backend
          app.kubernetes.io/part-of: jaeger
      spec:
        containers:
          - name: elasticsearch
            image: docker.elastic.co/elasticsearch/elasticsearch:5.6.0
            imagePullPolicy: Always
            command:
              - bin/elasticsearch
            args:
              - "-Ehttp.host=0.0.0.0"
              - "-Etransport.host=127.0.0.1"
            volumeMounts:
              - name: data
                mountPath: /data
            readinessProbe:
              exec:
                command:
                - curl
                - --fail
                - --silent
                - --output
                - /dev/null
                - --user
                - elastic:changeme
                - localhost:9200
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 4
        volumes:
          - name: data
            emptyDir: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: elasticsearch
    labels:
      app: elasticsearch
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: storage-backend
      app.kubernetes.io/part-of: jaeger
  spec:
    selector:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: storage-backend
      app.kubernetes.io/part-of: jaeger
    ports:
    - port: 9200
      name: elasticsearch
    - port: 9300
      name: transport
    type: LoadBalancer
    
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: jaeger-query
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: query
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: jaeger
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: jaeger
          app.kubernetes.io/name: jaeger
          app.kubernetes.io/component: query
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "16686"
      spec:
        containers:
        - image: jaegertracing/jaeger-query:1.9.0
          name: jaeger-query
          args: [
            "--config-file=/conf/query.yaml", 
            "--es.num-shards=1", 
            "--es.num-replicas=0", 
            "--es.server-urls=http://elasticsearch:9200"
            ]
          ports:
          - containerPort: 16686
            protocol: TCP
          readinessProbe:
            httpGet:
              path: "/"
              port: 16687
          volumeMounts:
          - name: jaeger-configuration-volume
            mountPath: /conf
          env:
          - name: SPAN_STORAGE_TYPE
            valueFrom:
              configMapKeyRef:
                name: jaeger-configuration
                key: span-storage-type
        volumes:
          - configMap:
              name: jaeger-configuration
              items:
                - key: query
                  path: query.yaml
            name: jaeger-configuration-volume
- apiVersion: v1
  kind: Service
  metadata:
    name: jaeger-query
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: query
  spec:
    ports:
    - name: jaeger-query
      port: 16686
      protocol: TCP
      targetPort: 16686
    selector:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: query
    type: LoadBalancer

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: jaeger-collector
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
  spec:
    selector:
      matchLabels:
        app: jaeger
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: jaeger
          app.kubernetes.io/name: jaeger
          app.kubernetes.io/component: collector
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "14268"
      spec:
        containers:
        - image: jaegertracing/jaeger-collector
          name: jaeger-collector
          args: [
            "--config-file=/conf/collector.yaml"
            # ,"--es.num-shards=1",
            # "--es.num-replicas=0",
            # "--es.server-urls=http://elasticsearch:9200",
            # "--collector.zipkin.host-port=:9411"
            ]
          ports:
          - containerPort: 14269
            protocol: TCP
          - containerPort: 14250
            protocol: TCP
          - containerPort: 14267
            protocol: TCP
          - containerPort: 14268
            protocol: TCP
          - containerPort: 9411
            protocol: TCP
          readinessProbe:
            httpGet:
              path: "/"
              port: 14269
          volumeMounts:
          - name: jaeger-configuration-volume
            mountPath: /conf
          env:
          - name: SPAN_STORAGE_TYPE
            valueFrom:
              configMapKeyRef:
                name: jaeger-configuration
                key: span-storage-type
        volumes:
          - configMap:
              name: jaeger-configuration
              items:
                - key: collector
                  path: collector.yaml
            name: jaeger-configuration-volume
- apiVersion: v1
  kind: Service
  metadata:
    name: jaeger-collector
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
  spec:
    ports:
    - name: jaeger-collector-grpc
      port: 14250
      protocol: TCP
      targetPort: 14250
    - name: jaeger-collector-tchannel
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    name: zipkin
    labels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: zipkin
  spec:
    ports:
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
    type: ClusterIP